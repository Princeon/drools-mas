/*
 * Copyright 2011 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.test;

import mock.MockFact;
import org.drools.mas.body.content.Action;
import org.drools.mas.mappers.MyMapArgsEntryType;
import org.drools.mas.util.LoggerHelper;


declare MathResponse
    x : Double
    y : Double
    z : Double
end

declare LocalTrigger
    x : int
end

rule "Call Interface"
when
    $p : MockFact( $a : age )
then
    double $x = Math.sqrt($a);
    insert( new Double($x*$x) );
end

rule "Call rules"
when
    $p : MockFact( $a : age )
then
    insert( new LocalTrigger($a) );
end


rule "Rule Op"
when
    $lt : LocalTrigger( $x : x )
then
    retract($lt);
    insert( new Integer($x*$x) );
end

rule "Action_Request : squareRoot"
when
    $a : Action( actionName == "squareRoot",
                 keySet contains "x", $x : this["x"] >= 0 )
then
    retract($a);
    LoggerHelper.info("EXAMPLE RULES (session 2): Executing square root");
    insert( new MathResponse((Double) $x, Math.sqrt( (Double) $x), 0.0) );
end


rule "Action_Request : squareRoot_error"
when
    $a : Action( actionName == "squareRoot",
                 keySet contains "x", $x : this["x"] < 0 )
then
    throw new IllegalArgumentException( "can't extract the square root of " + $x );
end

query squareRoot( Double $x, Double $return  )
    MathResponse( $x, $return ;)
end



rule "Action_Request : randomSum"
when
    $a : Action( actionName == "randomSum",
                 keySet contains "x", $x : this["x"]  )

then
    retract($a);
    Double x = (Double) $x;
    Double z = Math.random();
    LoggerHelper.info("EXAMPLE RULES (session 2): ACTING II " + x + "   " +z + "  ");
    insert( new MathResponse(x, x+z, z ) );
end

query randomSum( Double $x, Double $return, Double $z  )
    MathResponse( $x, $return, $z;)
end



rule "Log"
when
    $o : Object()
then
    LoggerHelper.trace(" >>> SESSION #2 >>> " + $o);
end

